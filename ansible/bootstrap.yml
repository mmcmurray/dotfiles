---
- hosts: 127.0.0.1
  connection: local
  remote_user: "{{ lookup('env','USER') }}"
  become_method: sudo

  vars:
    current_user: "{{ lookup('env','USER') }}"
    current_group: "{{ lookup('env', 'GROUP') }}"
    current_user_home: "{{ lookup('env','HOME') }}"

  vars_files:
    - vars/defaults.yml
    - vars/vault/secrets.yml

  pre_tasks:
    ## DEBUG
    #- debug: var=hostvars[inventory_hostname]

    ## Include user var file if it exists
    - name: Look for user var file
      stat: path=vars/{{ current_user }}.yml
      register: usr_vars
    - name: Include user var file if it exists
      include_vars: vars/{{ current_user }}.yml
      when: usr_vars.stat.exists

    ## Distro specific tasks
    - name: Fedora/Korora tasks
      include: tasks/fedora.yml
      when: ( ansible_distribution == 'Korora') or ( ansible_distribution == 'Fedora' )

    - name: Ubuntu tasks
      include: tasks/ubuntu.yml
      when: ( ansible_distribution == 'Ubuntu') or ( ansible_distribution == 'Debian' )

    - name: Ensure home repos folder
      file:
        state: directory
        path: "{{ ansible_user_dir }}/repos/{{ item }}"
      with_items:
        - git
        - svn

  roles:
    - { role: ssh, tags: [ 'ssh' ] }
    - { role: sublime, tags: [ 'sublime' ] }
    - { role: dbeaver, tags: [ 'dbeaver' ] }
    - { role: hashicorp, tags: [ 'hashicorp' ] }
    - { role: virtualbox, tags: [ 'virtualbox' ], when: ansible_virtualization_role == "host" }
    - { role: docker, install_docker_compose: true, tags: [ 'docker' ] }
    #- { role: maven, tags: [ 'maven' ], when: ansible_distribution != 'MacOSX' }
    #- { role: gradle, gradle_daemon: true, tags: [ 'gradle' ], when: ansible_distribution != 'MacOSX' }
    - { role: node, tags: [ 'node' ], when: ansible_distribution != 'MacOSX' }
    #- { role: ansible-role-homebrew, tags: [ 'homebrew' ], when: ansible_distribution == 'MacOSX' }
    - { role: oh-my-zsh, tags: [ 'oh-my-zsh' ] }
    - { role: gnome-themes, tags: [ 'gnome-themes' ], when: ansible_distribution != 'MacOSX' }
    - { role: repos-git, tags: [ 'repos-git' ] }
    - { role: aws, tags: [ 'aws' ] }

  post_tasks:
    - name: Setup git config
      template:
        dest: "{{ ansible_user_dir }}/.gitconfig"
        src: ../templates/.gitconfig.j2

    - name: Symlink dotfiles
      command: bin/dfm install chdir={{ ansible_user_dir }}/.dotfiles

    # Refresh fonts after .fonts was symlinked from dotfiles repo
    - name: Refresh font cache
      command: /usr/bin/fc-cache -vf {{ ansible_user_dir }}/.fonts
      when: ansible_distribution != 'MacOSX'

    - name: Ensure vim swp and backup directories
      file: state=directory path={{ item }}
      with_items:
        - "{{ ansible_user_dir }}/.vim/backup"
        - "{{ ansible_user_dir }}/.vim/swp"

    - name: Change .dotfiles repo from https to ssh
      shell: "git remote set-url origin git@github.com:mmcmurray/dotfiles.git"

    - name: (Linux) Set zsh as default shell
      user:
        name: "{{ current_user }}"
        shell: /bin/zsh
        state: present
      become: yes
      when: ( usr_shell == 'zsh' ) and ( ansible_distribution != 'MacOSX' )

    - name: (MacOSX) Set zsh as default shell
      user:
        name: "{{ current_user }}"
        shell: /usr/local/bin/zsh
        state: present
      become: yes
      when: ( usr_shell == 'zsh' ) and ( ansible_distribution == 'MacOSX' )